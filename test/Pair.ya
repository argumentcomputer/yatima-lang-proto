package Pair
  where

def Pair (A : *) (B : *) : * =
  @self all
    (0 P : all (_ : Pair A B) -> *)
    (& new : all (a : A) (b : B) -> (P (lam P n => n a b)))
    -> P self

def new (0 A : *) (0 B : *) (a : A) (b : B) : Pair A B = lam P n => n a b
