package Nat where

def Nat : * =
  @self all
    (0 P : all Nat -> *)
    (& zero : (P (lam P z s => z)))
    (& succ : all (pred : Nat) -> (P (lam P z s => s pred)))
    -> P self

def zero : Nat = lam P z s => z
def succ (x : Nat) : Nat = lam P z s => s x

